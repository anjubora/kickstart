{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\nimport Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      this.setState({\n        loading: true,\n        errorMessage: ''\n      });\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, 'ether')\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {\n        this.setState({\n          errorMessage: err.message\n        });\n      }\n\n      this.setState({\n        loading: false,\n        value: ''\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => {\n        this.setState({\n          value: event.target.value\n        });\n      },\n      label: \"ether\",\n      labelPosition: \"right\"\n    })), __jsx(Message, {\n      error: true,\n      header: \"oops!!\",\n      content: this.state.errorMessage\n    }), __jsx(Button, {\n      primary: true,\n      loading: this.state.loading\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/anju/sol/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","errorMessage","loading","event","preventDefault","campaign","props","address","setState","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","message","render","onSubmit","target"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAaC,KAAb,EAAmBC,OAAnB,EAA4BC,MAA5B,QAAyC,mBAAzC;AACA,OAAQC,QAAR,MAAsB,sBAAtB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;;AACA,MAAMC,cAAN,SAA6BR,SAA7B,CAAsC;AAAA;AAAA;;AAAA,mCAE9B;AACFS,MAAAA,KAAK,EAAC,EADJ;AAEFC,MAAAA,YAAY,EAAC,EAFX;AAGFC,MAAAA,OAAO,EAAC;AAHN,KAF8B;;AAAA,sCAQ3B,MAAOC,KAAP,IAAe;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMC,QAAQ,GAACT,QAAQ,CAAC,KAAKU,KAAL,CAAWC,OAAZ,CAAvB;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC,IAAT;AAAcD,QAAAA,YAAY,EAAC;AAA3B,OAAd;;AACA,UAAI;AACA,cAAMQ,QAAQ,GAAC,MAAMZ,IAAI,CAACa,GAAL,CAASC,WAAT,EAArB;AACA,cAAMN,QAAQ,CAACO,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACrCC,UAAAA,IAAI,EAACN,QAAQ,CAAC,CAAD,CADwB;AAErCT,UAAAA,KAAK,EAACH,IAAI,CAACmB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWlB,KAA5B,EAAkC,OAAlC;AAF+B,SAAnC,CAAN;AAIAF,QAAAA,MAAM,CAACqB,YAAP,CAAqB,cAAa,KAAKb,KAAL,CAAWC,OAAQ,EAArD;AAEH,OARD,CAQC,OAAMa,GAAN,EAAU;AACZ,aAAKZ,QAAL,CAAc;AAACP,UAAAA,YAAY,EAACmB,GAAG,CAACC;AAAlB,SAAd;AACE;;AAED,WAAKb,QAAL,CAAc;AAACN,QAAAA,OAAO,EAAC,KAAT;AAAeF,QAAAA,KAAK,EAAC;AAArB,OAAd;AAGA,KA3BmC;AAAA;;AA4BlCsB,EAAAA,MAAM,GAAE;AACJ,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAA+B,MAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,KAAL,CAAWjB;AAAnD,OACI,MAAC,IAAD,CAAM,KAAN,QACI,4CADJ,EAEI,MAAC,KAAD;AACA,MAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWlB,KADlB;AAEA,MAAA,QAAQ,EAAGG,KAAD,IAAS;AAAC,aAAKK,QAAL,CAAc;AAACR,UAAAA,KAAK,EAACG,KAAK,CAACqB,MAAN,CAAaxB;AAApB,SAAd;AAA0C,OAF9D;AAGA,MAAA,KAAK,EAAC,OAHN;AAIA,MAAA,aAAa,EAAC;AAJd,MAFJ,CADJ,EASQ,MAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,MAAM,EAAC,QAAtB;AAA+B,MAAA,OAAO,EAAE,KAAKkB,KAAL,CAAWjB;AAAnD,MATR,EAUQ,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWhB;AAApC,qBAVR,CADJ;AAqBH;;AAlDiC;;AAsDtC,eAAeH,cAAf","sourcesContent":["import React,{Component} from 'react';\nimport {Form,Input,Message, Button} from 'semantic-ui-react'\nimport  Campaign from '../ethereum/campaign';\nimport web3 from '../ethereum/web3';\nimport {Router} from '../routes';\nclass ContributeForm extends Component{\n\n  state={\n      value:'',\n      errorMessage:'',\n      loading:false\n  }\n\n  onSubmit=async (event)=>{\n   event.preventDefault();\n   const campaign=Campaign(this.props.address);\n   this.setState({loading:true,errorMessage:''})\n   try {\n       const accounts=await web3.eth.getAccounts();\n       await campaign.methods.contribute().send({\n           from:accounts[0],\n           value:web3.utils.toWei(this.state.value,'ether')\n       })\n       Router.replaceRoute(`/campaigns/${this.props.address}`)\n       \n   }catch(err){\n  this.setState({errorMessage:err.message})\n   }\n\n   this.setState({loading:false,value:''})\n\n\n  }\n    render(){\n        return (\n            <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n                <Form.Field>\n                    <label>Amount to contribute</label>\n                    <Input\n                    value={this.state.value}\n                    onChange={(event)=>{this.setState({value:event.target.value})}}\n                    label=\"ether\"\n                    labelPosition=\"right\"/>\n                    </Form.Field>\n                    <Message error header=\"oops!!\" content={this.state.errorMessage}/>\n                    <Button primary loading={this.state.loading}>\n                        Contribute!\n                    </Button>\n                </Form>\n\n\n\n        );\n\n\n    };\n\n\n}\nexport default ContributeForm;"]},"metadata":{},"sourceType":"module"}